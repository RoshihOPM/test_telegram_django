import logging
from users.models import UserProfileModel
from telegrambot.services.handlers.base_handler import BaseHandler
from telegrambot.services.poll_service import PollService


logger = logging.getLogger('telegrambot')


class PollHandler(BaseHandler):
    def __init__(self, telegram_api):
        self.telegram_api = telegram_api

    def handle(self, chat_id):
        try:
            user = UserProfileModel.objects.get(telegram_chat_id=chat_id)
            poll = PollService.get_next_poll_for_user(user)

            if poll:
                response = self.telegram_api.send_poll(chat_id, poll.question, poll.options)
                poll_id = response.json().get("result", {}).get("poll", {}).get("id")

                if poll_id:
                    PollService.mark_poll_sent(poll, user, poll_id)
                    logger.info(f"–û–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id} —Å poll_id={poll_id}")
                else:
                    logger.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å telegram_poll_id –∏–∑ –æ—Ç–≤–µ—Ç–∞ Telegram")
            else:
                self.telegram_api.send_message(chat_id, "–í—ã –ø—Ä–æ—à–ª–∏ –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ä–æ—Å—ã üéâ")
                logger.info(f"–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è chat_id={chat_id}")

        except UserProfileModel.DoesNotExist:
            logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å chat_id={chat_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        except Exception as e:
            logger.exception(f"–û—à–∏–±–∫–∞ –≤ PollHandler: {e}")
